{"version":3,"sources":["context/PhotoContext.js","components/Icons/IconSearch.js","components/Form.js","components/Navigation.js","components/Header.js","components/NoImages.js","components/Image.js","components/Gallery.js","components/Loader.js","components/Container.js","components/Item.js","components/Search.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["PhotoContext","createContext","PhotoContextProvider","_ref","children","state","setState","useState","loading","images","_jsx","Provider","value","_objectSpread","runSearch","query","axios","get","params","method","api_key","process","tags","per_page","format","nojsoncallback","then","_ref2","data","photos","photo","catch","error","console","log","IconSearch","height","width","d","fill","fillRule","Form","history","useHistory","searchEntry","setSearchEntry","_jsxs","className","onSubmit","e","preventDefault","currentTarget","reset","push","concat","name","onChange","target","placeholder","type","trim","disabled","Navigation","NavLink","to","Header","NoImages","Image","url","title","alt","src","Gallery","length","map","farm","server","id","secret","Loader","Container","searchTerm","useContext","useEffect","Item","Search","NotFound","App","HashRouter","basename","Switch","Route","exact","path","render","Redirect","match","searchInput","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b37af7e8.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const PhotoContext = createContext();\n\nconst PhotoContextProvider = ({ children }) => {\n  const [state, setState] = useState({ loading: true, images: [] });\n\n  return (\n    <PhotoContext.Provider\n      value={{\n        ...state,\n        runSearch: (query) => {\n          axios\n            .get(\"https://api.flickr.com/services/rest/\", {\n              params: {\n                method: \"flickr.photos.search\",\n                api_key: process.env.REACT_APP_API_KEY,\n                tags: query,\n                per_page: 24,\n                format: \"json\",\n                nojsoncallback: 1,\n              },\n            })\n            .then(({ data }) => {\n              setState({\n                loading: false,\n                images: data.photos.photo,\n              });\n            })\n            .catch((error) => {\n              console.log(\n                \"Encountered an error with fetching and parsing data\",\n                error\n              );\n\n              setState({\n                loading: false,\n                images: [],\n              });\n            });\n        },\n      }}\n    >\n      {children}\n    </PhotoContext.Provider>\n  );\n};\n\nexport default PhotoContextProvider;\n","import React from \"react\";\n\nconst IconSearch = () => {\n  return (\n    <svg height=\"32\" width=\"32\">\n      <path\n        d=\"M19.427 21.427a8.5 8.5 0 1 1 2-2l5.585 5.585c.55.55.546 1.43 0 1.976l-.024.024a1.399 1.399 0 0 1-1.976 0l-5.585-5.585zM14.5 21a6.5 6.5 0 1 0 0-13 6.5 6.5 0 0 0 0 13z\"\n        fill=\"#ffffff\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport default IconSearch;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport IconSearch from \"./Icons/IconSearch\";\n\nconst Form = () => {\n  const history = useHistory();\n  const [searchEntry, setSearchEntry] = useState(\"\");\n\n  return (\n    <form\n      className=\"search-form\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        e.currentTarget.reset();\n        history.push(`/search/${searchEntry}`);\n      }}\n    >\n      <input\n        name=\"search\"\n        onChange={(e) => {\n          setSearchEntry(e.target.value);\n        }}\n        placeholder=\"Search...\"\n        type=\"text\"\n        value={searchEntry}\n      />\n      <button\n        className={`search-button ${searchEntry.trim() ? \"active\" : null}`}\n        disabled={!searchEntry.trim()}\n        type=\"submit\"\n      >\n        <IconSearch />\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navigation = () => {\n  return (\n    <nav className=\"main-nav\">\n      <ul>\n        <li>\n          <NavLink to=\"/mountain\">Mountain</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/beach\">Beaches</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/bird\">Birds</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/food\">Food</NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Form from \"./Form\";\nimport Navigation from \"./Navigation\";\n\nconst Header = () => {\n  return (\n    <div>\n      <h1>PhotoBucket</h1>\n      <Form />\n      <Navigation />\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst NoImages = () => (\n  <div>\n    <h2>No Images Found</h2>\n    <p>Please try a different search term</p>\n  </div>\n);\n\nexport default NoImages;\n","import React from \"react\";\n\nconst Image = ({ url, title }) => (\n  <li>\n    <img alt={title} src={url} />\n  </li>\n);\n\nexport default Image;\n","import React from \"react\";\nimport NoImages from \"./NoImages\";\nimport Image from \"./Image\";\n\nconst Gallery = ({ data }) => {\n  return (\n    <div>\n      {data.length < 0 ? (\n        <NoImages />\n      ) : (\n        <ul>\n          {data.map(({ farm, server, id, secret, title }) => {\n            return (\n              <Image\n                key={id}\n                alt={title}\n                url={`https://farm${farm}.staticflickr.com/${server}/${id}_${secret}_m.jpg`}\n              />\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\n\nconst Loader = () => {\n  return <div className=\"loader\" />;\n};\n\nexport default Loader;\n","import React, { useContext, useEffect } from \"react\";\nimport { PhotoContext } from \"../context/PhotoContext\";\nimport Gallery from \"./Gallery\";\nimport Loader from \"./Loader\";\n\nconst Container = ({ searchTerm }) => {\n  const { images, loading, runSearch } = useContext(PhotoContext);\n  useEffect(() => {\n    runSearch(searchTerm);\n    // eslint-disable-next-line\n  }, [searchTerm]);\n\n  return (\n    <div className=\"photo-container\">\n      {loading ? <Loader /> : <Gallery data={images} />}\n    </div>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\nimport Container from \"./Container\";\n\nconst Item = ({ searchTerm }) => {\n  return (\n    <div>\n      <h2>{searchTerm} Pictures</h2>\n      <Container searchTerm={searchTerm} />\n    </div>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Container from \"./Container\";\n\nconst Search = ({ searchTerm }) => {\n  return (\n    <div>\n      <h2>{searchTerm} Images</h2>\n      <Container searchTerm={searchTerm} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div className=\"not-found\">\n    <h2>Page Not Found</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport PhotoContextProvider from \"./context/PhotoContext\";\nimport Header from \"./components/Header\";\nimport Item from \"./components/Item\";\nimport Search from \"./components/Search\";\nimport NotFound from \"./components/NotFound\";\n\nconst App = () => {\n  return (\n    <PhotoContextProvider>\n      <HashRouter basename=\"/SnapScout\">\n        <div className=\"container\">\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" render={() => <Redirect to=\"/mountain\" />} />\n            <Route\n              path=\"/mountain\"\n              render={() => <Item searchTerm=\"mountain\" />}\n            />\n            <Route path=\"/beach\" render={() => <Item searchTerm=\"beach\" />} />\n            <Route path=\"/bird\" render={() => <Item searchTerm=\"bird\" />} />\n            <Route path=\"/food\" render={() => <Item searchTerm=\"food\" />} />\n            <Route\n              path=\"/search/:searchInput\"\n              render={({ match }) => (\n                <Search searchTerm={match.params.searchInput} />\n              )}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </HashRouter>\n    </PhotoContextProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}